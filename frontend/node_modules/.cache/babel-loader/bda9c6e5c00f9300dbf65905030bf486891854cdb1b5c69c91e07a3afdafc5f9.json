{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const token = localStorage.getItem('token'); // Ensure the token is retrieved correctly\n  const updateCart = newCart => setCart(newCart); // Make sure `setCart` properly updates the cart\n\n  // Fetch the cart for the current user\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/cart', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          setCart(response.data.cart.items);\n        }\n      } catch (error) {\n        console.error('Error fetching cart:', error);\n      }\n    };\n    if (token) {\n      fetchCart();\n    }\n  }, [token]);\n\n  // Add product to cart or update quantity if it exists\n  // Add product to cart or update quantity if it exists\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item.productId === product._id);\n      if (existingProduct) {\n        // Update quantity if it exists\n        return prevCart.map(item => item.productId === product._id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        // Add new product with initial quantity of 1, ensuring the product name is set\n        return [...prevCart, {\n          productId: product._id,\n          productName: product.name,\n          // Set the product name\n          price: product.price,\n          quantity: 1,\n          minQuantityForNegotiation: product.minQuantityForNegotiation || 0,\n          negotiationStatus: 'pending' // Default status when first added\n        }];\n      }\n    });\n  };\n\n  // Update product price after negotiation\n  const updateProductPrice = (productId, newPrice) => {\n    setCart(prevCart => {\n      return prevCart.map(item => item._id === productId ? {\n        ...item,\n        price: newPrice\n      } : item);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateProductPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","token","localStorage","getItem","updateCart","newCart","fetchCart","response","get","headers","Authorization","data","success","items","error","console","addToCart","product","prevCart","existingProduct","find","item","productId","_id","map","quantity","productName","name","price","minQuantityForNegotiation","negotiationStatus","updateProductPrice","newPrice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState ,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const token = localStorage.getItem('token'); // Ensure the token is retrieved correctly\r\n  const updateCart = (newCart) => setCart(newCart);  // Make sure `setCart` properly updates the cart\r\n\r\n  // Fetch the cart for the current user\r\n  useEffect(() => {\r\n    const fetchCart = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/cart', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        });\r\n        if (response.data.success) {\r\n          setCart(response.data.cart.items);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cart:', error);\r\n      }\r\n    };\r\n  \r\n    if (token) {\r\n      fetchCart();\r\n    }\r\n  }, [token]);\r\n\r\n  // Add product to cart or update quantity if it exists\r\n  // Add product to cart or update quantity if it exists\r\nconst addToCart = (product) => {\r\n  setCart((prevCart) => {\r\n    const existingProduct = prevCart.find(item => item.productId === product._id);\r\n\r\n    if (existingProduct) {\r\n      // Update quantity if it exists\r\n      return prevCart.map(item =>\r\n        item.productId === product._id ? { ...item, quantity: item.quantity + 1 } : item\r\n      );\r\n    } else {\r\n      // Add new product with initial quantity of 1, ensuring the product name is set\r\n      return [\r\n        ...prevCart,\r\n        {\r\n          productId: product._id,\r\n          productName: product.name, // Set the product name\r\n          price: product.price,\r\n          quantity: 1,\r\n          minQuantityForNegotiation: product.minQuantityForNegotiation || 0,\r\n          negotiationStatus: 'pending', // Default status when first added\r\n        }\r\n      ];\r\n    }\r\n  });\r\n};\r\n\r\n  // Update product price after negotiation\r\n  const updateProductPrice = (productId, newPrice) => {\r\n    setCart((prevCart) => {\r\n      return prevCart.map(item =>\r\n        item._id === productId ? { ...item, price: newPrice } : item\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, updateProductPrice }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}