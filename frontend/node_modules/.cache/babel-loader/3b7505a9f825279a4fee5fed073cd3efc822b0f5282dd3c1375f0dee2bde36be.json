{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\SupportChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socket from '../socket';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupportChat = ({\n  farmerId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [image, setImage] = useState(null); // New state for image upload\n\n  // Fetch previous messages when the component mounts\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/support/messages');\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.error('Error fetching support messages:', error);\n      }\n    };\n    fetchMessages();\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('text', message);\n    formData.append('sender', 'farmer');\n    formData.append('farmerId', farmerId);\n\n    // Append the image to formData if there's any image selected\n    if (image) {\n      formData.append('image', image);\n    }\n    try {\n      // Emit the message to the server\n      socket.emit('sendMessage', {\n        text: message,\n        sender: 'farmer',\n        image: image ? image.name : null\n      });\n\n      // Save the message (and image if uploaded) to the database\n      const response = await axios.post('http://localhost:5000/api/support/messages', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessages(prevMessages => [...prevMessages, response.data.message]);\n      setMessage('');\n      setImage(null); // Clear the image input after sending\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Support Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '200px',\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'farmer' ? 'right' : 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \" \", msg.text, msg.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/uploads/${msg.image}`,\n            alt: \"support-chat-img\",\n            style: {\n              maxWidth: '100px',\n              marginTop: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]) // Capture the image\n        ,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SupportChat, \"CxnULH6Fo+Vi2gnix3s/+MSuQTY=\");\n_c = SupportChat;\nexport default SupportChat;\nvar _c;\n$RefreshReg$(_c, \"SupportChat\");","map":{"version":3,"names":["React","useState","useEffect","socket","axios","jsxDEV","_jsxDEV","SupportChat","farmerId","_s","message","setMessage","messages","setMessages","image","setImage","fetchMessages","response","get","data","error","console","on","msg","prevMessages","off","sendMessage","e","preventDefault","formData","FormData","append","emit","text","sender","name","post","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","height","overflowY","map","index","textAlign","src","alt","maxWidth","marginTop","onSubmit","type","value","onChange","target","placeholder","required","files","accept","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/SupportChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\nimport axios from 'axios';\r\n\r\nconst SupportChat = ({ farmerId }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [image, setImage] = useState(null); // New state for image upload\r\n\r\n  // Fetch previous messages when the component mounts\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/support/messages');\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.error('Error fetching support messages:', error);\r\n      }\r\n    };\r\n    fetchMessages();\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (msg) => {\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('text', message);\r\n    formData.append('sender', 'farmer');\r\n    formData.append('farmerId', farmerId);\r\n    \r\n    // Append the image to formData if there's any image selected\r\n    if (image) {\r\n      formData.append('image', image);\r\n    }\r\n\r\n    try {\r\n      // Emit the message to the server\r\n      socket.emit('sendMessage', { text: message, sender: 'farmer', image: image ? image.name : null });\r\n\r\n      // Save the message (and image if uploaded) to the database\r\n      const response = await axios.post('http://localhost:5000/api/support/messages', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n\r\n      setMessages((prevMessages) => [...prevMessages, response.data.message]);\r\n      setMessage('');\r\n      setImage(null); // Clear the image input after sending\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Support Chat</h2>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', height: '200px', overflowY: 'scroll' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'farmer' ? 'right' : 'left' }}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n            {/* Display the image if present in the message */}\r\n            {msg.image && (\r\n              <div>\r\n                <img \r\n                  src={`http://localhost:5000/uploads/${msg.image}`} \r\n                  alt=\"support-chat-img\" \r\n                  style={{ maxWidth: '100px', marginTop: '5px' }} \r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form onSubmit={sendMessage}>\r\n        <input \r\n          type=\"text\" \r\n          value={message} \r\n          onChange={(e) => setMessage(e.target.value)} \r\n          placeholder=\"Type your message...\" \r\n          required \r\n        />\r\n        <input \r\n          type=\"file\" \r\n          onChange={(e) => setImage(e.target.files[0])} // Capture the image\r\n          accept=\"image/*\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}