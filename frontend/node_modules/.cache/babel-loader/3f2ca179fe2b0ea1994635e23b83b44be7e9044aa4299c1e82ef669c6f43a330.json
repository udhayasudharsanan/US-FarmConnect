{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useCart } from '../context/CartContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart() {\n  _s();\n  const {\n    cart\n  } = useCart();\n  const [negotiationMessages, setNegotiationMessages] = useState({});\n  const [requestedPrices, setRequestedPrices] = useState({});\n  const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\n  const customerId = \"your-logged-in-customer-id\";\n  const handleNegotiationChange = (e, productId) => {\n    setNegotiationMessages({\n      ...negotiationMessages,\n      [productId]: e.target.value\n    });\n  };\n  const handlePriceChange = (e, productId) => {\n    setRequestedPrices({\n      ...requestedPrices,\n      [productId]: e.target.value\n    });\n  };\n  const sendNegotiation = async productId => {\n    const message = negotiationMessages[productId];\n    const requestedPrice = requestedPrices[productId];\n    if (!message || !requestedPrice) {\n      alert('Please provide both a message and a requested price.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/negotiate', {\n        customerId,\n        productId,\n        message,\n        requestedPrice\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Include the token in the headers\n        }\n      });\n      if (response.data.success) {\n        alert('Negotiation request sent to the farmer.');\n        setNegotiationMessages(prev => ({\n          ...prev,\n          [productId]: ''\n        }));\n        setRequestedPrices(prev => ({\n          ...prev,\n          [productId]: ''\n        }));\n      } else {\n        alert('Failed to send negotiation request. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending negotiation message:', error);\n      alert('Error sending negotiation request. Please check your network.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), item.quantity >= item.minQuantityForNegotiation && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter your negotiation message\",\n            value: negotiationMessages[item._id] || '',\n            onChange: e => handleNegotiationChange(e, item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter your requested price\",\n            value: requestedPrices[item._id] || '',\n            onChange: e => handlePriceChange(e, item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendNegotiation(item._id),\n            children: \"Send Negotiation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), item.quantity < item.minQuantityForNegotiation && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Negotiation not available (min quantity for negotiation: \", item.minQuantityForNegotiation, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Proceed to Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Cart, \"x2jQPT90Zu0NrMwr73mRWKfDJ1o=\", false, function () {\n  return [useCart];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useCart","axios","jsxDEV","_jsxDEV","Cart","_s","cart","negotiationMessages","setNegotiationMessages","requestedPrices","setRequestedPrices","token","localStorage","getItem","customerId","handleNegotiationChange","e","productId","target","value","handlePriceChange","sendNegotiation","message","requestedPrice","alert","response","post","headers","Authorization","data","success","prev","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","name","price","quantity","minQuantityForNegotiation","placeholder","_id","onChange","type","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/Cart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useCart } from '../context/CartContext';\r\nimport axios from 'axios';\r\n\r\nexport default function Cart() {\r\n  const { cart } = useCart();\r\n  const [negotiationMessages, setNegotiationMessages] = useState({});\r\n  const [requestedPrices, setRequestedPrices] = useState({});\r\n  const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\r\n  const customerId = \"your-logged-in-customer-id\";\r\n\r\n  const handleNegotiationChange = (e, productId) => {\r\n    setNegotiationMessages({\r\n      ...negotiationMessages,\r\n      [productId]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handlePriceChange = (e, productId) => {\r\n    setRequestedPrices({\r\n      ...requestedPrices,\r\n      [productId]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const sendNegotiation = async (productId) => {\r\n    const message = negotiationMessages[productId];\r\n    const requestedPrice = requestedPrices[productId];\r\n    if (!message || !requestedPrice) {\r\n      alert('Please provide both a message and a requested price.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/negotiate', {\r\n        customerId,\r\n        productId,\r\n        message,\r\n        requestedPrice,\r\n    \r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}` // Include the token in the headers\r\n        }\r\n      });\r\n\r\n      if (response.data.success) {\r\n        alert('Negotiation request sent to the farmer.');\r\n        setNegotiationMessages((prev) => ({ ...prev, [productId]: '' }));\r\n        setRequestedPrices((prev) => ({ ...prev, [productId]: '' }));\r\n      } else {\r\n        alert('Failed to send negotiation request. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending negotiation message:', error);\r\n      alert('Error sending negotiation request. Please check your network.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Cart</h2>\r\n      {cart.length === 0 ? (\r\n        <p>Your cart is empty</p>\r\n      ) : (\r\n        <ul>\r\n          {cart.map((item) => (\r\n            <li key={item._id}>\r\n              <h4>{item.name}</h4>\r\n              <p>Price: ${item.price}</p>\r\n              <p>Quantity: {item.quantity}</p>\r\n              {item.quantity >= item.minQuantityForNegotiation && (\r\n                <div>\r\n                  <textarea\r\n                    placeholder=\"Enter your negotiation message\"\r\n                    value={negotiationMessages[item._id] || ''}\r\n                    onChange={(e) => handleNegotiationChange(e, item._id)}\r\n                  />\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter your requested price\"\r\n                    value={requestedPrices[item._id] || ''}\r\n                    onChange={(e) => handlePriceChange(e, item._id)}\r\n                  />\r\n                  <button onClick={() => sendNegotiation(item._id)}>\r\n                    Send Negotiation\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {item.quantity < item.minQuantityForNegotiation && (\r\n                <p>Negotiation not available (min quantity for negotiation: {item.minQuantityForNegotiation})</p>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button className=\"btn btn-primary\">Proceed to Checkout</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}