{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n\n  // Fetch the cart for the current user\n  const fetchCart = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://localhost:5000/api/cart', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCart(response.data.cart); // Assuming API returns cart in this structure\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCart(); // Load cart when the component mounts\n  }, []);\n\n  // Add product to cart or update quantity if it exists\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item._id === product._id);\n      if (existingProduct) {\n        // Update quantity if it exists\n        return prevCart.map(item => item._id === product._id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        // Add new product with initial quantity of 1\n        return [...prevCart, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Update product price after negotiation\n  const updateProductPrice = (productId, newPrice) => {\n    setCart(prevCart => {\n      return prevCart.map(item => item._id === productId ? {\n        ...item,\n        price: newPrice\n      } : item);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateProductPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","fetchCart","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","addToCart","product","prevCart","existingProduct","find","item","_id","map","quantity","updateProductPrice","productId","newPrice","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState ,useEffect} from 'react';\r\nimport axios from 'axios';\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n\r\n  // Fetch the cart for the current user\r\n  const fetchCart = async () => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/cart', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setCart(response.data.cart); // Assuming API returns cart in this structure\r\n    } catch (error) {\r\n      console.error('Error fetching cart:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchCart(); // Load cart when the component mounts\r\n  }, []);\r\n\r\n  // Add product to cart or update quantity if it exists\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => {\r\n      const existingProduct = prevCart.find(item => item._id === product._id);\r\n      if (existingProduct) {\r\n        // Update quantity if it exists\r\n        return prevCart.map(item =>\r\n          item._id === product._id ? { ...item, quantity: item.quantity + 1 } : item\r\n        );\r\n      } else {\r\n        // Add new product with initial quantity of 1\r\n        return [...prevCart, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Update product price after negotiation\r\n  const updateProductPrice = (productId, newPrice) => {\r\n    setCart((prevCart) => {\r\n      return prevCart.map(item =>\r\n        item._id === productId ? { ...item, price: newPrice } : item\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, updateProductPrice }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC5E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAGpC;EACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,gCAAgC,EAAE;QACjEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CAAC,CAAC;MACFF,OAAO,CAACK,QAAQ,CAACI,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACDrB,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,SAAS,GAAIC,OAAO,IAAK;IAC7Bb,OAAO,CAAEc,QAAQ,IAAK;MACpB,MAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKL,OAAO,CAACK,GAAG,CAAC;MACvE,IAAIH,eAAe,EAAE;QACnB;QACA,OAAOD,QAAQ,CAACK,GAAG,CAACF,IAAI,IACtBA,IAAI,CAACC,GAAG,KAAKL,OAAO,CAACK,GAAG,GAAG;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GAAGH,IACxE,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGH,QAAQ,EAAE;UAAE,GAAGD,OAAO;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IAClDvB,OAAO,CAAEc,QAAQ,IAAK;MACpB,OAAOA,QAAQ,CAACK,GAAG,CAACF,IAAI,IACtBA,IAAI,CAACC,GAAG,KAAKI,SAAS,GAAG;QAAE,GAAGL,IAAI;QAAEO,KAAK,EAAED;MAAS,CAAC,GAAGN,IAC1D,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAE3B,IAAI;MAAEa,SAAS;MAAES;IAAmB,CAAE;IAAAxB,QAAA,EAClEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,GAAA,CApDWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}