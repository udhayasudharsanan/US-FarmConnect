{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\FarmerChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socket from '../socket'; // Ensure you have your socket instance set up\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FarmerChat = ({\n  productId,\n  farmerId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Fetch previous messages for the specific product\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/messages/${productId}`);\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchMessages();\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', messageData => {\n      if (messageData.productId === productId) {\n        setMessages(prevMessages => [...prevMessages, messageData]);\n      }\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [productId]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      const messageData = {\n        productId,\n        farmerId,\n        // Ensure this is the correct farmer ID\n        text: message,\n        sender: 'farmer'\n      };\n      socket.emit('sendMessage', messageData); // Emit the message to the server\n      setMessages(prevMessages => [...prevMessages, messageData]); // Update local messages\n      setMessage(''); // Clear the input\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Chat for Product \", productId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '150px',\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'farmer' ? 'left' : 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === 'farmer' ? 'Farmer' : 'Customer', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your reply...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FarmerChat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = FarmerChat;\nexport default FarmerChat;\nvar _c;\n$RefreshReg$(_c, \"FarmerChat\");","map":{"version":3,"names":["React","useState","useEffect","socket","axios","jsxDEV","_jsxDEV","FarmerChat","productId","farmerId","_s","message","setMessage","messages","setMessages","fetchMessages","response","get","data","error","console","on","messageData","prevMessages","off","sendMessage","e","preventDefault","trim","text","sender","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","height","overflowY","map","msg","index","textAlign","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/FarmerChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from '../socket'; // Ensure you have your socket instance set up\r\nimport axios from 'axios';\r\n\r\nconst FarmerChat = ({ productId, farmerId }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Fetch previous messages for the specific product\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/messages/${productId}`);\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.error(\"Error fetching messages:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (messageData) => {\r\n      if (messageData.productId === productId) {\r\n        setMessages((prevMessages) => [...prevMessages, messageData]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [productId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim()) {\r\n      const messageData = {\r\n        productId,\r\n        farmerId, // Ensure this is the correct farmer ID\r\n        text: message,\r\n        sender: 'farmer'\r\n      };\r\n      socket.emit('sendMessage', messageData); // Emit the message to the server\r\n      setMessages((prevMessages) => [...prevMessages, messageData]); // Update local messages\r\n      setMessage(''); // Clear the input\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Chat for Product {productId}</h3>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', height: '150px', overflowY: 'scroll' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'farmer' ? 'left' : 'right' }}>\r\n            <strong>{msg.sender === 'farmer' ? 'Farmer' : 'Customer'}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input \r\n          type=\"text\" \r\n          value={message} \r\n          onChange={(e) => setMessage(e.target.value)} \r\n          placeholder=\"Type your reply...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmerChat;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}