{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getProducts } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await getProducts(); // Call to API to fetch products\n        if (Array.isArray(response.data.products)) {\n          setProducts(response.data.products); // Set products only if it's an array\n        } else {\n          setProducts([]); // Set to an empty array if the response is not an array\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setProducts([]); // Default to an empty array if there's an error\n      }\n    };\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.price, \" - \", product.quantity, \" units\"]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useEffect","useState","getProducts","jsxDEV","_jsxDEV","CustomerDashboard","_s","products","setProducts","fetchProducts","response","Array","isArray","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","name","price","quantity","_id","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getProducts } from '../api';\r\n\r\nconst CustomerDashboard = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await getProducts(); // Call to API to fetch products\r\n        if (Array.isArray(response.data.products)) {\r\n          setProducts(response.data.products); // Set products only if it's an array\r\n        } else {\r\n          setProducts([]); // Set to an empty array if the response is not an array\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        setProducts([]); // Default to an empty array if there's an error\r\n      }\r\n    };\r\n  \r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Products</h2>\r\n      <ul>\r\n        {products.map(product => (\r\n          <li key={product._id}>\r\n            {product.name} - {product.price} - {product.quantity} units\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAAC,CAAC,CAAC,CAAC;QACtC,IAAIS,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAACN,QAAQ,CAAC,EAAE;UACzCC,WAAW,CAACE,QAAQ,CAACG,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC;QACvC,CAAC,MAAM;UACLC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDN,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACnB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BhB,OAAA;MAAAY,QAAA,EACGT,QAAQ,CAACc,GAAG,CAACC,OAAO,iBACnBlB,OAAA;QAAAY,QAAA,GACGM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,KAAK,EAAC,KAAG,EAACF,OAAO,CAACG,QAAQ,EAAC,QACvD;MAAA,GAFSH,OAAO,CAACI,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCID,iBAAiB;AAAAsB,EAAA,GAAjBtB,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}