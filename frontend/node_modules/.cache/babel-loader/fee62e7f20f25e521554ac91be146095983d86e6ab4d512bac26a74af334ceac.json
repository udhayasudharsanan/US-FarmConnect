{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    productId,\n    farmerId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const userId = localStorage.getItem('userId'); // Get user ID from auth\n\n  useEffect(() => {\n    // Fetch previous messages\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/messages/${productId}`);\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', messageData => {\n      if (messageData.productId === productId) {\n        setMessages(prevMessages => [...prevMessages, messageData]);\n      }\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [productId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      const messageData = {\n        productId,\n        farmerId,\n        userId,\n        text: message,\n        sender: 'customer'\n      };\n\n      // Emit the message to the server\n      socket.emit('sendMessage', messageData);\n\n      // Save the message to the database\n      try {\n        await axios.post('http://localhost:5000/api/messages', messageData);\n        setMessages(prevMessages => [...prevMessages, messageData]);\n        setMessage('');\n      } catch (error) {\n        console.error('Error saving message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with Farmer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender === 'farmer' ? 'farmer' : 'customer'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === 'farmer' ? 'Farmer' : 'You', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"dchF3dYZXbhrLLoFUOc1AOkdwp0=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","socket","jsxDEV","_jsxDEV","ChatPage","_s","productId","farmerId","messages","setMessages","message","setMessage","userId","localStorage","getItem","fetchMessages","response","get","data","error","console","on","messageData","prevMessages","off","sendMessage","e","preventDefault","trim","text","sender","emit","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport socket from '../socket';\r\n\r\nconst ChatPage = () => {\r\n  const { productId, farmerId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const userId = localStorage.getItem('userId'); // Get user ID from auth\r\n\r\n  useEffect(() => {\r\n    // Fetch previous messages\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/messages/${productId}`);\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (messageData) => {\r\n      if (messageData.productId === productId) {\r\n        setMessages((prevMessages) => [...prevMessages, messageData]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [productId]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (message.trim()) {\r\n      const messageData = {\r\n        productId,\r\n        farmerId,\r\n        userId,\r\n        text: message,\r\n        sender: 'customer',\r\n      };\r\n\r\n      // Emit the message to the server\r\n      socket.emit('sendMessage', messageData);\r\n\r\n      // Save the message to the database\r\n      try {\r\n        await axios.post('http://localhost:5000/api/messages', messageData);\r\n        setMessages((prevMessages) => [...prevMessages, messageData]);\r\n        setMessage('');\r\n      } catch (error) {\r\n        console.error('Error saving message:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Chat with Farmer</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chat-message ${msg.sender === 'farmer' ? 'farmer' : 'customer'}`}\r\n          >\r\n            <strong>{msg.sender === 'farmer' ? 'Farmer' : 'You'}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage} className=\"mt-3\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type your message...\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            required\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}