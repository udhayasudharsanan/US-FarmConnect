{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\SupportChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport socket from '../socket';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupportChat = ({\n  farmerId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [image, setImage] = useState(null); // State for image upload\n  const messagesEndRef = useRef(null); // Ref to automatically scroll to the bottom\n  const token = localStorage.getItem('token'); // Fetch token once and reuse it\n\n  // Auto-scroll to the bottom when messages change\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Fetch previous messages when the component mounts\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/support/all', {\n          headers: {\n            'Authorization': `Bearer ${token}` // Attach token for authentication\n          }\n        });\n        setMessages(response.data); // Assuming the response contains a list of messages\n      } catch (error) {\n        console.error('Error fetching support messages:', error);\n      }\n    };\n    fetchMessages();\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [token]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!token) {\n      console.error('No token found. Please login again.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('text', message);\n    formData.append('sender', 'farmer');\n    if (image) {\n      formData.append('image', image);\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/support/messages', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Attach token to Authorization header\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Update the message list with the new message\n      setMessages(prevMessages => [...prevMessages, response.data.message]);\n      setMessage(''); // Clear the input field after sending\n      setImage(null); // Clear the image after sending\n    } catch (error) {\n      console.error('Error sending message:', error.response ? error.response.data : error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Support Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll'\n      },\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'farmer' ? 'right' : 'left',\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \" \", msg.message, msg.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/uploads/${msg.image}`,\n            alt: \"support-chat-img\",\n            style: {\n              maxWidth: '100px',\n              marginTop: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true,\n        style: {\n          width: '75%',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]) // Capture the image\n        ,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(SupportChat, \"vrY7tevJWYYHsL872fXtvjV6SYs=\");\n_c = SupportChat;\nexport default SupportChat;\nvar _c;\n$RefreshReg$(_c, \"SupportChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socket","axios","jsxDEV","_jsxDEV","SupportChat","farmerId","_s","message","setMessage","messages","setMessages","image","setImage","messagesEndRef","token","localStorage","getItem","current","scrollIntoView","behavior","fetchMessages","response","get","headers","data","error","console","on","msg","prevMessages","off","sendMessage","e","preventDefault","formData","FormData","append","post","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","height","overflowY","map","index","textAlign","sender","margin","src","alt","maxWidth","marginTop","ref","onSubmit","type","value","onChange","target","placeholder","required","width","marginRight","files","accept","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/SupportChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport socket from '../socket';\r\nimport axios from 'axios';\r\n\r\nconst SupportChat = ({ farmerId }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [image, setImage] = useState(null); // State for image upload\r\n  const messagesEndRef = useRef(null); // Ref to automatically scroll to the bottom\r\n  const token = localStorage.getItem('token'); // Fetch token once and reuse it\r\n\r\n  // Auto-scroll to the bottom when messages change\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  // Fetch previous messages when the component mounts\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/support/all', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // Attach token for authentication\r\n          },\r\n        });\r\n        setMessages(response.data); // Assuming the response contains a list of messages\r\n      } catch (error) {\r\n        console.error('Error fetching support messages:', error);\r\n      }\r\n    };\r\n    fetchMessages();\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (msg) => {\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [token]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      console.error('No token found. Please login again.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('text', message);\r\n    formData.append('sender', 'farmer');\r\n    \r\n    if (image) {\r\n      formData.append('image', image);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/support/messages', formData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, // Attach token to Authorization header\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      // Update the message list with the new message\r\n      setMessages((prevMessages) => [...prevMessages, response.data.message]);\r\n      setMessage(''); // Clear the input field after sending\r\n      setImage(null); // Clear the image after sending\r\n    } catch (error) {\r\n      console.error('Error sending message:', error.response ? error.response.data : error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Support Chat</h2>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', height: '300px', overflowY: 'scroll' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'farmer' ? 'right' : 'left', margin: '10px' }}>\r\n            <strong>{msg.sender}:</strong> {msg.message}\r\n            {/* Display the image if present in the message */}\r\n            {msg.image && (\r\n              <div>\r\n                <img \r\n                  src={`http://localhost:5000/uploads/${msg.image}`} \r\n                  alt=\"support-chat-img\" \r\n                  style={{ maxWidth: '100px', marginTop: '5px' }} \r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {/* Reference for auto-scroll */}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form onSubmit={sendMessage} style={{ marginTop: '10px' }}>\r\n        <input \r\n          type=\"text\" \r\n          value={message} \r\n          onChange={(e) => setMessage(e.target.value)} \r\n          placeholder=\"Type your message...\" \r\n          required \r\n          style={{ width: '75%', marginRight: '10px' }}\r\n        />\r\n        <input \r\n          type=\"file\" \r\n          onChange={(e) => setImage(e.target.files[0])} // Capture the image\r\n          accept=\"image/*\"\r\n        />\r\n        <button type=\"submit\" style={{ marginLeft: '10px' }}>Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}