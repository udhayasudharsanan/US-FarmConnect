{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [supportTickets, setSupportTickets] = useState([]);\n  const [farmerIdToCertify, setFarmerIdToCertify] = useState('');\n\n  // Fetch users, products, and support tickets on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const usersResponse = await axios.get('http://localhost:5000/api/admin/users', {\n          headers: {\n            Authorization: localStorage.getItem('token')\n          }\n        });\n        setUsers(usersResponse.data);\n        const productsResponse = await axios.get('http://localhost:5000/api/products', {\n          headers: {\n            Authorization: localStorage.getItem('token')\n          }\n        });\n        setProducts(productsResponse.data);\n        const supportResponse = await axios.get('http://localhost:5000/api/support', {\n          headers: {\n            Authorization: localStorage.getItem('token')\n          }\n        });\n        setSupportTickets(supportResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to certify a farmer\n  const certifyFarmer = async farmerId => {\n    try {\n      await axios.put(`http://localhost:5000/api/admin/certify-farmer/${farmerId}`, {}, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      alert('Farmer certified');\n      // Refresh user list after certifying\n      setUsers(users.map(user => user._id === farmerId ? {\n        ...user,\n        certified: true\n      } : user));\n    } catch (error) {\n      console.error('Error certifying farmer:', error);\n    }\n  };\n\n  // Function to delete a product\n  const deleteProduct = async productId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/admin/delete-product/${productId}`, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      setProducts(products.filter(product => product._id !== productId));\n      alert('Product deleted');\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Manage Farmers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.filter(user => user.role === 'farmer').map(farmer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [farmer.name, \" - Certified: \", farmer.certified ? 'Yes' : 'No', !farmer.certified && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => certifyFarmer(farmer._id),\n          children: \"Certify Farmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, farmer._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Manage Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.price, \" - \", product.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteProduct(product._id),\n          children: \"Delete Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Support Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: supportTickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ticket.question, \" - Status: \", ticket.status]\n      }, ticket._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"eZG4qGilBBXSleGz1+mgVSkr1Do=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","products","setProducts","supportTickets","setSupportTickets","farmerIdToCertify","setFarmerIdToCertify","fetchData","usersResponse","get","headers","Authorization","localStorage","getItem","data","productsResponse","supportResponse","error","console","certifyFarmer","farmerId","put","alert","map","user","_id","certified","deleteProduct","productId","delete","filter","product","children","fileName","_jsxFileName","lineNumber","columnNumber","role","farmer","name","onClick","price","quantity","ticket","question","status","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdminDashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [supportTickets, setSupportTickets] = useState([]);\r\n  const [farmerIdToCertify, setFarmerIdToCertify] = useState('');\r\n\r\n  // Fetch users, products, and support tickets on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const usersResponse = await axios.get('http://localhost:5000/api/admin/users', {\r\n          headers: { Authorization: localStorage.getItem('token') },\r\n        });\r\n        setUsers(usersResponse.data);\r\n\r\n        const productsResponse = await axios.get('http://localhost:5000/api/products', {\r\n          headers: { Authorization: localStorage.getItem('token') },\r\n        });\r\n        setProducts(productsResponse.data);\r\n\r\n        const supportResponse = await axios.get('http://localhost:5000/api/support', {\r\n          headers: { Authorization: localStorage.getItem('token') },\r\n        });\r\n        setSupportTickets(supportResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Function to certify a farmer\r\n  const certifyFarmer = async (farmerId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/admin/certify-farmer/${farmerId}`, {}, {\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n      alert('Farmer certified');\r\n      // Refresh user list after certifying\r\n      setUsers(users.map(user => user._id === farmerId ? { ...user, certified: true } : user));\r\n    } catch (error) {\r\n      console.error('Error certifying farmer:', error);\r\n    }\r\n  };\r\n\r\n  // Function to delete a product\r\n  const deleteProduct = async (productId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/admin/delete-product/${productId}`, {\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n      setProducts(products.filter(product => product._id !== productId));\r\n      alert('Product deleted');\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Dashboard</h2>\r\n\r\n      <h3>Manage Farmers</h3>\r\n      <ul>\r\n        {users.filter(user => user.role === 'farmer').map(farmer => (\r\n          <li key={farmer._id}>\r\n            {farmer.name} - Certified: {farmer.certified ? 'Yes' : 'No'}\r\n            {!farmer.certified && (\r\n              <button onClick={() => certifyFarmer(farmer._id)}>Certify Farmer</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Manage Products</h3>\r\n      <ul>\r\n        {products.map(product => (\r\n          <li key={product._id}>\r\n            {product.name} - {product.price} - {product.quantity}\r\n            <button onClick={() => deleteProduct(product._id)}>Delete Product</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Support Tickets</h3>\r\n      <ul>\r\n        {supportTickets.map(ticket => (\r\n          <li key={ticket._id}>\r\n            {ticket.question} - Status: {ticket.status}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}