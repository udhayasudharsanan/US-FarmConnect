{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getProducts } from '../api';\nimport Chat from './Chat'; // Assuming Chat is the component for chat functionality\nimport Cart from './Cart'; // Assuming Cart is a component\nimport axios from 'axios';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]); // State to manage cart items\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const selectedProductId = \"yourProductIdHere\"; // Replace this with the actual product ID based on the context\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await getProducts(); // Fetch products from API\n        setProducts(response.data.products); // Assuming your API returns the correct products array\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // Function to add product to the cart\n  const addToCart = product => {\n    setCart(prevCart => [...prevCart, product]); // Add the selected product to the cart\n    alert(`${product.name} added to cart!`); // Notify user\n  };\n\n  // Fetch messages for the selected product\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/messages/${selectedProductId}`);\n        setMessages(response.data.messages); // Set the fetched messages into state\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchMessages();\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', messageData => {\n      if (messageData.productId === selectedProductId) {\n        // Check if the message is for this product\n        setMessages(prevMessages => [...prevMessages, messageData]); // Update state with new message\n      }\n    });\n    return () => {\n      socket.off('receiveMessage'); // Clean up the listener on unmount\n    };\n  }, [selectedProductId]); // Adding selectedProductId as a dependency\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      const messageData = {\n        productId: selectedProductId,\n        text: message,\n        sender: 'customer' // Identify the sender as a customer\n      };\n\n      // Emit the message to the server\n      socket.emit('sendMessage', messageData);\n\n      // Save the message to the database\n      try {\n        await axios.post('http://localhost:5000/api/messages', messageData);\n        setMessages(prevMessages => [...prevMessages, messageData]); // Update local messages\n        setMessage(''); // Clear input field\n      } catch (error) {\n        console.error('Error saving message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(products) && products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/${product.image}`,\n          alt: product.name,\n          style: {\n            width: '100px',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToCart(product),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          productId: product._id,\n          farmerId: product.farmer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), \" \"]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === 'farmer' ? 'Farmer' : 'Customer', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          required: true // Require a message before sending\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"AG+rD+fgDTrkPGFP4TBV8vCUsCY=\");\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getProducts","Chat","Cart","axios","socket","jsxDEV","_jsxDEV","CustomerDashboard","_s","products","setProducts","cart","setCart","messages","setMessages","message","setMessage","selectedProductId","fetchProducts","response","data","error","console","addToCart","product","prevCart","alert","name","fetchMessages","get","on","messageData","productId","prevMessages","off","sendMessage","e","preventDefault","trim","text","sender","emit","post","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","price","quantity","src","image","alt","style","width","height","onClick","_id","farmerId","farmer","msg","index","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getProducts } from '../api';\r\nimport Chat from './Chat'; // Assuming Chat is the component for chat functionality\r\nimport Cart from './Cart'; // Assuming Cart is a component\r\nimport axios from 'axios';\r\nimport socket from '../socket';\r\n\r\nconst CustomerDashboard = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setCart] = useState([]); // State to manage cart items\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const selectedProductId = \"yourProductIdHere\"; // Replace this with the actual product ID based on the context\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await getProducts(); // Fetch products from API\r\n        setProducts(response.data.products);  // Assuming your API returns the correct products array\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Function to add product to the cart\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => [...prevCart, product]); // Add the selected product to the cart\r\n    alert(`${product.name} added to cart!`); // Notify user\r\n  };\r\n\r\n  // Fetch messages for the selected product\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/messages/${selectedProductId}`);\r\n        setMessages(response.data.messages); // Set the fetched messages into state\r\n      } catch (error) {\r\n        console.error(\"Error fetching messages:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (messageData) => {\r\n      if (messageData.productId === selectedProductId) { // Check if the message is for this product\r\n        setMessages((prevMessages) => [...prevMessages, messageData]); // Update state with new message\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage'); // Clean up the listener on unmount\r\n    };\r\n  }, [selectedProductId]); // Adding selectedProductId as a dependency\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (message.trim()) {\r\n      const messageData = {\r\n        productId: selectedProductId,\r\n        text: message,\r\n        sender: 'customer', // Identify the sender as a customer\r\n      };\r\n\r\n      // Emit the message to the server\r\n      socket.emit('sendMessage', messageData);\r\n\r\n      // Save the message to the database\r\n      try {\r\n        await axios.post('http://localhost:5000/api/messages', messageData);\r\n        setMessages((prevMessages) => [...prevMessages, messageData]); // Update local messages\r\n        setMessage(''); // Clear input field\r\n      } catch (error) {\r\n        console.error('Error saving message:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Customer Dashboard</h2>\r\n      <Cart /> {/* Include the cart component */}\r\n      <h3>Available Products</h3>\r\n      <ul>\r\n        {Array.isArray(products) && products.length > 0 ? (\r\n          products.map(product => (\r\n            <li key={product._id}>\r\n              <h4>{product.name}</h4>\r\n              <p>Price: ${product.price}</p>\r\n              <p>Quantity: {product.quantity}</p>\r\n              <img src={`http://localhost:5000/${product.image}`} alt={product.name} style={{ width: '100px', height: 'auto' }} />\r\n              <button onClick={() => addToCart(product)}>Add to Cart</button>\r\n              <Chat productId={product._id} farmerId={product.farmer} /> {/* Chat component for each product */}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No products available</p>\r\n        )}\r\n      </ul>\r\n\r\n      {/* Chat Section */}\r\n      <div>\r\n        <h3>Chat Messages</h3>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.sender === 'farmer' ? 'Farmer' : 'Customer'}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n        <form onSubmit={sendMessage}>\r\n          <input \r\n            type=\"text\" \r\n            value={message} \r\n            onChange={(e) => setMessage(e.target.value)} \r\n            placeholder=\"Type your message...\"\r\n            required // Require a message before sending\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}