{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udhaya\\\\Desktop\\\\mern-farm-connect\\\\frontend\\\\src\\\\components\\\\SupportForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socket from '../socket';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupportChat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Fetch previous messages when the component mounts\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/support/messages');\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.error('Error fetching support messages:', error);\n      }\n    };\n    fetchMessages();\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      const messageData = {\n        text: message,\n        sender: 'customer'\n      };\n\n      // Emit the message to the server\n      socket.emit('sendMessage', messageData);\n\n      // Save the message to the database\n      axios.post('http://localhost:5000/api/support/messages', messageData).then(() => {\n        setMessages(prevMessages => [...prevMessages, messageData]);\n        setMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Support Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '200px',\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'customer' ? 'right' : 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SupportChat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = SupportChat;\nexport default SupportChat;\nvar _c;\n$RefreshReg$(_c, \"SupportChat\");","map":{"version":3,"names":["React","useState","useEffect","socket","axios","jsxDEV","_jsxDEV","SupportChat","_s","message","setMessage","messages","setMessages","fetchMessages","response","get","data","error","console","on","msg","prevMessages","off","sendMessage","e","preventDefault","trim","messageData","text","sender","emit","post","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","height","overflowY","map","index","textAlign","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Udhaya/Desktop/mern-farm-connect/frontend/src/components/SupportForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\nimport axios from 'axios';\r\n\r\nconst SupportChat = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Fetch previous messages when the component mounts\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/support/messages');\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.error('Error fetching support messages:', error);\r\n      }\r\n    };\r\n    fetchMessages();\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (msg) => {\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim()) {\r\n      const messageData = { text: message, sender: 'customer' };\r\n\r\n      // Emit the message to the server\r\n      socket.emit('sendMessage', messageData);\r\n\r\n      // Save the message to the database\r\n      axios.post('http://localhost:5000/api/support/messages', messageData)\r\n        .then(() => {\r\n          setMessages((prevMessages) => [...prevMessages, messageData]);\r\n          setMessage('');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error sending message:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Support Chat</h2>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', height: '200px', overflowY: 'scroll' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'customer' ? 'right' : 'left' }}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input \r\n          type=\"text\" \r\n          value={message} \r\n          onChange={(e) => setMessage(e.target.value)} \r\n          placeholder=\"Type your message...\" \r\n          required \r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}